{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\desktop\\\\P565-project-g5-Sprint03-Nick\\\\frontend\\\\src\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport \"./Login.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport GoogleLogin from \"react-google-login\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Axios from \"axios\";\n\nconst failureGoogle = response => {\n  alert(\"OAuth did not work.\");\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.send = this.send.bind(this);\n    this.googleLogin = this.googleLogin.bind(this);\n    this.hashCode = this.hashCode.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  googleLogin(response) {\n    console.log(response);\n    this.setState({\n      email: response.profileObj.email\n    });\n  }\n\n  hashCode(s) {\n    let h = 0,\n        l = s.length,\n        i = 0;\n    if (l > 0) while (i < l) h = (h << 5) - h + s.charCodeAt(i++) | 0;\n    return h;\n  }\n\n  send() {\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email)) {\n      Axios.post(\"https://whispering-fortress-23669.herokuapp.com/specificposting/login\", {\n        email: this.state.email,\n        password: this.state.password\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          localStorage.setItem(\"loggedIn\", true);\n          localStorage.setItem(\"email\", this.state.email);\n          window.location.replace(\"http://rent-mate.herokuapp.com/\");\n        }\n      }, error => {\n        alert(\"Username or password is incorrect.\");\n      });\n    } else {\n      alert(\"Please use a valid email address when logging in.\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(TextField, {\n      label: \"Email\",\n      onChange: this.handleEmail,\n      margin: \"normal\",\n      fullWidth: true,\n      className: \"signInText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"password\",\n      label: \"Password\",\n      onChange: this.handlePassword,\n      margin: \"normal\",\n      fullWidth: true,\n      className: \"signInText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"login-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      id: \"login-button\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Login\"), React.createElement(GoogleLogin, {\n      clientId: \"153387415708-if58o9u5ms35717r21tvl543utp87366.apps.googleusercontent.com\",\n      id: \"custom-google\",\n      buttonText: \"Login with Google\",\n      onSuccess: this.googleLogin,\n      onFailure: failureGoogle,\n      cookiePolicy: \"single_host_origin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"need-account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Need an account? \", React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Sign up.\"))), React.createElement(\"a\", {\n      href: \"/forgot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Forgot password?\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\Nick\\desktop\\P565-project-g5-Sprint03-Nick\\frontend\\src\\Login.js"],"names":["React","Component","TextField","Button","GoogleLogin","ToastsContainer","ToastsStore","Axios","failureGoogle","response","alert","Login","constructor","props","state","email","password","handleEmail","bind","handlePassword","send","googleLogin","hashCode","event","setState","target","value","console","log","profileObj","s","h","l","length","i","charCodeAt","test","post","then","data","success","localStorage","setItem","window","location","replace","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAGC,QAAQ,IAAI;AAChCC,EAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,CAFD;;AAIA,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAC5BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDD,EAAAA,WAAW,CAACM,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AAAET,MAAAA,KAAK,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAAtB,KAAd;AACD;;AAEDP,EAAAA,cAAc,CAACI,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACD;;AAEDL,EAAAA,WAAW,CAACZ,QAAD,EAAW;AACpBkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AACA,SAAKe,QAAL,CAAc;AACZT,MAAAA,KAAK,EAAEN,QAAQ,CAACoB,UAAT,CAAoBd;AADf,KAAd;AAGD;;AAEDO,EAAAA,QAAQ,CAACQ,CAAD,EAAI;AACV,QAAIC,CAAC,GAAG,CAAR;AAAA,QACEC,CAAC,GAAGF,CAAC,CAACG,MADR;AAAA,QAEEC,CAAC,GAAG,CAFN;AAGA,QAAIF,CAAC,GAAG,CAAR,EAAW,OAAOE,CAAC,GAAGF,CAAX,EAAcD,CAAC,GAAI,CAACA,CAAC,IAAI,CAAN,IAAWA,CAAX,GAAeD,CAAC,CAACK,UAAF,CAAaD,CAAC,EAAd,CAAhB,GAAqC,CAAzC;AACzB,WAAOH,CAAP;AACD;;AAEDX,EAAAA,IAAI,GAAG;AACL,QACE,gDAAgDgB,IAAhD,CAAqD,KAAKtB,KAAL,CAAWC,KAAhE,CADF,EAEE;AACAR,MAAAA,KAAK,CAAC8B,IAAN,CACE,uEADF,EAEE;AACEtB,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADpB;AAEEC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFvB,OAFF,EAMEsB,IANF,CAOE7B,QAAQ,IAAI;AACVkB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;;AACA,YAAIA,QAAQ,CAAC8B,IAAT,CAAcC,OAAlB,EAA2B;AACzBC,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACAD,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAAK5B,KAAL,CAAWC,KAAzC;AACA4B,UAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,iCAAxB;AACD;AACF,OAdH,EAeEC,KAAK,IAAI;AACPpC,QAAAA,KAAK,CAAC,oCAAD,CAAL;AACD,OAjBH;AAmBD,KAtBD,MAsBO;AACLA,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACD;AACF;;AAEDqC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,QAAQ,EAAE,KAAK9B,WAFjB;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,EAAC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,QAAQ,EAAE,KAAKE,cAHjB;AAIE,MAAA,MAAM,EAAC,QAJT;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,EAAC,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,EAAE,EAAC,cAHL;AAIE,MAAA,OAAO,EAAE,KAAKC,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EASE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAC,0EADX;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,UAAU,EAAC,mBAHb;AAIE,MAAA,SAAS,EAAE,KAAKC,WAJlB;AAKE,MAAA,SAAS,EAAEb,aALb;AAME,MAAA,YAAY,EAAE,oBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAjBF,EAmCE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACmB;AAAG,MAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnB,CADF,CAnCF,EAwCE;AAAG,MAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAxCF,CADF,CADF;AA8CD;;AAjH2B;;AAoH9B,eAAeG,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport GoogleLogin from \"react-google-login\";\nimport { ToastsContainer, ToastsStore } from \"react-toasts\";\nimport Axios from \"axios\";\n\nconst failureGoogle = response => {\n  alert(\"OAuth did not work.\");\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.send = this.send.bind(this);\n    this.googleLogin = this.googleLogin.bind(this);\n    this.hashCode = this.hashCode.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handlePassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  googleLogin(response) {\n    console.log(response);\n    this.setState({\n      email: response.profileObj.email\n    });\n  }\n\n  hashCode(s) {\n    let h = 0,\n      l = s.length,\n      i = 0;\n    if (l > 0) while (i < l) h = ((h << 5) - h + s.charCodeAt(i++)) | 0;\n    return h;\n  }\n\n  send() {\n    if (\n      /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email)\n    ) {\n      Axios.post(\n        \"https://whispering-fortress-23669.herokuapp.com/specificposting/login\",\n        {\n          email: this.state.email,\n          password: this.state.password\n        }\n      ).then(\n        response => {\n          console.log(response);\n          if (response.data.success) {\n            localStorage.setItem(\"loggedIn\", true);\n            localStorage.setItem(\"email\", this.state.email);\n            window.location.replace(\"http://rent-mate.herokuapp.com/\");\n          }\n        },\n        error => {\n          alert(\"Username or password is incorrect.\");\n        }\n      );\n    } else {\n      alert(\"Please use a valid email address when logging in.\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"login-div\">\n        <div className=\"login-form\">\n          <p id=\"sign-in\">Sign in</p>\n          <TextField\n            label=\"Email\"\n            onChange={this.handleEmail}\n            margin=\"normal\"\n            fullWidth\n            className=\"signInText\"\n          />\n          <TextField\n            type=\"password\"\n            label=\"Password\"\n            onChange={this.handlePassword}\n            margin=\"normal\"\n            fullWidth\n            className=\"signInText\"\n          />\n          <div id=\"login-buttons\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              id=\"login-button\"\n              onClick={this.send}\n            >\n              Login\n            </Button>\n            <GoogleLogin\n              clientId=\"153387415708-if58o9u5ms35717r21tvl543utp87366.apps.googleusercontent.com\"\n              id=\"custom-google\"\n              buttonText=\"Login with Google\"\n              onSuccess={this.googleLogin}\n              onFailure={failureGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n          </div>\n          <div id=\"need-account\">\n            <label>\n              Need an account? <a href=\"/register\">Sign up.</a>\n            </label>\n          </div>\n          <a href=\"/forgot\">Forgot password?</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}