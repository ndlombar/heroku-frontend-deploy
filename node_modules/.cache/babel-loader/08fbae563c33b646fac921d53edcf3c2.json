{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nick\\\\desktop\\\\P565-project-g5-Sprint03-Nick\\\\frontend\\\\src\\\\SecurityQuestions.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SecurityQuestions.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\n\nclass SecurityQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userEmail: \"\",\n      userPhone: \"2606156620\",\n      securityQuestions: [],\n      securityAnswers: [],\n      currentQuestion: \"\",\n      currentAnswer: \"\",\n      answer: \"\",\n      index: 0\n    };\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleAnswer = this.handleAnswer.bind(this);\n    this.saveAnswer = this.saveAnswer.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({\n      userEmail: event.target.value\n    });\n  }\n\n  handleAnswer() {\n    if (this.state.currentAnswer === this.state.answer) {\n      this.setState({\n        currentQuestion: this.state.securityQuestions[this.state.index]\n      });\n      this.setState({\n        currentAnswer: this.state.securityAnswers[this.state.index]\n      });\n      this.setState({\n        index: this.state.index + 1\n      });\n      this.setState({\n        answer: \"\"\n      });\n    } else {\n      alert(\"Incorrect\");\n    }\n  }\n\n  saveAnswer(event) {\n    this.setState({\n      answer: event.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.index === 4) {\n      window.location.replace(\"https://rent-mate.herokuapp.com/resetpassword\");\n    } else {\n      if (this.state.securityQuestions.length > 0) {\n        let node = React.createElement(\"div\", {\n          className: \"recoverForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"emailLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, this.state.currentQuestion), React.createElement(TextField, {\n          variant: \"outlined\",\n          placeholder: \"Answer here\",\n          onChange: this.saveAnswer,\n          className: \"email-input\",\n          type: \"password\",\n          value: this.state.answer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.handleAnswer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Recover\"));\n        ReactDOM.render(node, document.getElementById(\"recover-page\"));\n      }\n    }\n  }\n\n  send() {\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.userEmail)) {\n      alert(\"Please enter a valid email address.\");\n    } else {\n      Axios.get(\"https://whispering-fortress-23669.herokuapp.com/forgotPassword\", {\n        params: {\n          email: this.state.userEmail\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.success) {\n          this.setState({\n            securityQuestions: [response.data.securityQuestionList[0].securityQuestion, response.data.securityQuestionList[1].securityQuestion, response.data.securityQuestionList[2].securityQuestion]\n          });\n          this.setState({\n            securityAnswers: [response.data.securityQuestionList[0].answer, response.data.securityQuestionList[1].answer, response.data.securityQuestionList[2].answer]\n          });\n          this.setState({\n            currentQuestion: response.data.securityQuestionList[0].securityQuestion\n          });\n          this.setState({\n            currentAnswer: response.data.securityQuestionList[0].answer\n          });\n          this.setState({\n            index: 1\n          });\n        } else {\n          alert(\"That is not a registered email.\");\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"recover-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"recoverForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"emailLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"What is your email address?\"), React.createElement(TextField, {\n      variant: \"outlined\",\n      placeholder: \"Enter your email address\",\n      onChange: this.handleEmail,\n      className: \"email-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.send,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Recover\")));\n  }\n\n}\n\nexport default SecurityQuestions;","map":{"version":3,"sources":["C:\\Users\\Nick\\desktop\\P565-project-g5-Sprint03-Nick\\frontend\\src\\SecurityQuestions.js"],"names":["React","Component","ReactDOM","Typography","TextField","Button","Axios","SecurityQuestions","constructor","props","state","userEmail","userPhone","securityQuestions","securityAnswers","currentQuestion","currentAnswer","answer","index","handleEmail","bind","handleAnswer","saveAnswer","send","event","setState","target","value","alert","componentDidUpdate","window","location","replace","length","node","render","document","getElementById","test","get","params","email","then","response","console","log","data","success","securityQuestionList","securityQuestion","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,SAAS,EAAE,YAFA;AAGXC,MAAAA,iBAAiB,EAAE,EAHR;AAIXC,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXC,MAAAA,aAAa,EAAE,EANJ;AAOXC,MAAAA,MAAM,EAAE,EAPG;AAQXC,MAAAA,KAAK,EAAE;AARI,KAAb;AAWA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,IAAL,GAAY,KAAKA,IAAL,CAAUH,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDD,EAAAA,WAAW,CAACK,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AAAEd,MAAAA,SAAS,EAAEa,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAEDN,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKX,KAAL,CAAWM,aAAX,KAA6B,KAAKN,KAAL,CAAWO,MAA5C,EAAoD;AAClD,WAAKQ,QAAL,CAAc;AACZV,QAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWG,iBAAX,CAA6B,KAAKH,KAAL,CAAWQ,KAAxC;AADL,OAAd;AAGA,WAAKO,QAAL,CAAc;AACZT,QAAAA,aAAa,EAAE,KAAKN,KAAL,CAAWI,eAAX,CAA2B,KAAKJ,KAAL,CAAWQ,KAAtC;AADH,OAAd;AAGA,WAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,GAAmB;AAA5B,OAAd;AACA,WAAKO,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KATD,MASO;AACLW,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD;AACF;;AAEDN,EAAAA,UAAU,CAACE,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKnB,KAAL,CAAWQ,KAAX,KAAqB,CAAzB,EAA4B;AAC1BY,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,+CAAxB;AACD,KAFD,MAEO;AACL,UAAI,KAAKtB,KAAL,CAAWG,iBAAX,CAA6BoB,MAA7B,GAAsC,CAA1C,EAA6C;AAC3C,YAAIC,IAAI,GACN;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKxB,KAAL,CAAWK,eADd,CADF,EAIE,oBAAC,SAAD;AACE,UAAA,OAAO,EAAC,UADV;AAEE,UAAA,WAAW,EAAC,aAFd;AAGE,UAAA,QAAQ,EAAE,KAAKO,UAHjB;AAIE,UAAA,SAAS,EAAC,aAJZ;AAKE,UAAA,IAAI,EAAC,UALP;AAME,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWO,MANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAYE,oBAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAE,KAAKI,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZF,CADF;AAsBAnB,QAAAA,QAAQ,CAACiC,MAAT,CAAgBD,IAAhB,EAAsBE,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAtB;AACD;AACF;AACF;;AAEDd,EAAAA,IAAI,GAAG;AACL,QACE,CAAC,gDAAgDe,IAAhD,CACC,KAAK5B,KAAL,CAAWC,SADZ,CADH,EAIE;AACAiB,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD,KAND,MAMO;AACLtB,MAAAA,KAAK,CAACiC,GAAN,CACE,gEADF,EAEE;AACEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC;AAApB;AADV,OAFF,EAKE+B,IALF,CAMEC,QAAQ,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAIA,QAAQ,CAACG,IAAT,CAAcC,OAAlB,EAA2B;AACzB,eAAKtB,QAAL,CAAc;AACZZ,YAAAA,iBAAiB,EAAE,CACjB8B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsCC,gBADrB,EAEjBN,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsCC,gBAFrB,EAGjBN,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsCC,gBAHrB;AADP,WAAd;AAOA,eAAKxB,QAAL,CAAc;AACZX,YAAAA,eAAe,EAAE,CACf6B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsC/B,MADvB,EAEf0B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsC/B,MAFvB,EAGf0B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsC/B,MAHvB;AADL,WAAd;AAOA,eAAKQ,QAAL,CAAc;AACZV,YAAAA,eAAe,EACb4B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsCC;AAF5B,WAAd;AAIA,eAAKxB,QAAL,CAAc;AACZT,YAAAA,aAAa,EAAE2B,QAAQ,CAACG,IAAT,CAAcE,oBAAd,CAAmC,CAAnC,EAAsC/B;AADzC,WAAd;AAIA,eAAKQ,QAAL,CAAc;AAAEP,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAxBD,MAwBO;AACLU,UAAAA,KAAK,CAAC,iCAAD,CAAL;AACD;AACF,OAnCH,EAoCEsB,KAAK,IAAI;AACPN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,OAtCH;AAwCD;AACF;;AAEDf,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAIE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,WAAW,EAAC,0BAFd;AAGE,MAAA,QAAQ,EAAE,KAAKhB,WAHjB;AAIE,MAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAUE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKI,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CADF,CADF;AAkBD;;AAjJuC;;AAoJ1C,eAAehB,iBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SecurityQuestions.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Axios from \"axios\";\n\nclass SecurityQuestions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userEmail: \"\",\n      userPhone: \"2606156620\",\n      securityQuestions: [],\n      securityAnswers: [],\n      currentQuestion: \"\",\n      currentAnswer: \"\",\n      answer: \"\",\n      index: 0\n    };\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleAnswer = this.handleAnswer.bind(this);\n    this.saveAnswer = this.saveAnswer.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  handleEmail(event) {\n    this.setState({ userEmail: event.target.value });\n  }\n\n  handleAnswer() {\n    if (this.state.currentAnswer === this.state.answer) {\n      this.setState({\n        currentQuestion: this.state.securityQuestions[this.state.index]\n      });\n      this.setState({\n        currentAnswer: this.state.securityAnswers[this.state.index]\n      });\n      this.setState({ index: this.state.index + 1 });\n      this.setState({ answer: \"\" });\n    } else {\n      alert(\"Incorrect\");\n    }\n  }\n\n  saveAnswer(event) {\n    this.setState({ answer: event.target.value });\n  }\n\n  componentDidUpdate() {\n    if (this.state.index === 4) {\n      window.location.replace(\"https://rent-mate.herokuapp.com/resetpassword\");\n    } else {\n      if (this.state.securityQuestions.length > 0) {\n        let node = (\n          <div className=\"recoverForm\">\n            <Typography className=\"emailLabel\">\n              {this.state.currentQuestion}\n            </Typography>\n            <TextField\n              variant=\"outlined\"\n              placeholder=\"Answer here\"\n              onChange={this.saveAnswer}\n              className=\"email-input\"\n              type=\"password\"\n              value={this.state.answer}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleAnswer}\n            >\n              Recover\n            </Button>\n          </div>\n        );\n        ReactDOM.render(node, document.getElementById(\"recover-page\"));\n      }\n    }\n  }\n\n  send() {\n    if (\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n        this.state.userEmail\n      )\n    ) {\n      alert(\"Please enter a valid email address.\");\n    } else {\n      Axios.get(\n        \"https://whispering-fortress-23669.herokuapp.com/forgotPassword\",\n        {\n          params: { email: this.state.userEmail }\n        }\n      ).then(\n        response => {\n          console.log(response);\n          if (response.data.success) {\n            this.setState({\n              securityQuestions: [\n                response.data.securityQuestionList[0].securityQuestion,\n                response.data.securityQuestionList[1].securityQuestion,\n                response.data.securityQuestionList[2].securityQuestion\n              ]\n            });\n            this.setState({\n              securityAnswers: [\n                response.data.securityQuestionList[0].answer,\n                response.data.securityQuestionList[1].answer,\n                response.data.securityQuestionList[2].answer\n              ]\n            });\n            this.setState({\n              currentQuestion:\n                response.data.securityQuestionList[0].securityQuestion\n            });\n            this.setState({\n              currentAnswer: response.data.securityQuestionList[0].answer\n            });\n\n            this.setState({ index: 1 });\n          } else {\n            alert(\"That is not a registered email.\");\n          }\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"recover-page\">\n        <div className=\"recoverForm\">\n          <Typography className=\"emailLabel\">\n            What is your email address?\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Enter your email address\"\n            onChange={this.handleEmail}\n            className=\"email-input\"\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={this.send}>\n            Recover\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SecurityQuestions;\n"]},"metadata":{},"sourceType":"module"}